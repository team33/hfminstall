#!/bin/bash -e
#
# hfminstall 0.9
# HFM.net installer for Linux
#
# Brought to you by The [H]orde
# Copyright (c) 2013
# Dave Corfman <davecorfman@gmail.com>
# Kris Rusocki <kszysiu@gmail.com> 
#

HFMROOTNAME=hfm-net-0.9.1.595-h6

usage()
{
	echo Usage:
	echo -e \\t$0 -V\|--version
	echo -e \\t$0 -h\|--help
}


#
# download a file
# syntax: download <URL> [<output-file-name>]
#
download()
{
	local CURL_PARAM

	[ -z "$1" ] && return 1
	if which curl > /dev/null 2>&1 ; then
		[ -z "$2" ] && CURL_PARAM="-O" || CURL_PARAM="-o $2"
		curl -f -s -S -R -L $CURL_PARAM "$1" || return $?
	else
		wget -nv ${2:+-O $2} "$1" || return $?
	fi
	return 0
}

#
# Parse command-line options
#
OPT_VERSION=
OPT_USAGE=

while [ -n "$1" ]; do
	case $1 in
		(-V|--version)
			OPT_VERSION=1
			shift
			;;
		(-h|--help)
			OPT_USAGE=1
			shift
			;;
		(-*)
			echo ERROR: invalid option -- $1
			exit 1
			;;
		(*)
			break
			;;
	esac
done

if [ -n "$1" ]; then
	echo ERROR: excess argument -- $1
	exit 1
fi

#
# Check for command-line option conflicts
#
if [ -n "$OPT_VERSION$OPT_USAGE" -a "$OPT_VERSION$OPT_USAGE" != "1" ]; then
	echo ERROR: conflicting arguments
	exit 1
fi

#
# Process command-line options
#
[ -n "$OPT_USAGE" ] && usage && exit 0
[ -n "$OPT_VERSION" ] && echo hfminstall 0.9 \($HFMROOTNAME\) && exit 0

trap "echo Premature exit." ERR

# Make sure we are running with sudo
if [ "$(id -ru)" != "0" ]; then
	echo ERROR: need root privileges. Run with sudo.
	exit 1
fi


if [ -z "$SUDO_USER" ]; then
	echo ERROR: SUDO_USER variable not set, cannot continue.
	exit 1
fi

TARGET=$(eval echo ~$SUDO_USER/Desktop)
if [ ! -e "$TARGET" ]; then
	echo This does not appear to be a GUI install
	exit 1
fi

#
# check if fuser is working, need it to check if HFM is running
#
if ! fuser $PWD &> /dev/null ; then
	echo ERROR: fuser missing or not operational, cannot continue.
	exit 1
fi

#
# check if HFM is already running
#
IN_USE=$(fuser /var/lib/hfm/HFM.exe 2> /dev/null || true)
if [ -n "$IN_USE" ]; then
	echo Detected running HFM instance. Please stop HFM \(PID\(s\) $IN_USE\) and re-run $0
	exit 1
fi

#
# Make directory for HFM.net, d/l, and unzip
echo ==== Deleting current HFM installation, if any...
rm -rf /var/lib/hfm
mkdir /var/lib/hfm
cd /var/lib/hfm
echo ==== Downloading HFM...
download http://darkswarm.org/hfm-net/$HFMROOTNAME.zip
echo ==== Extracting HFM...
unzip -q $HFMROOTNAME.zip
mv */* .
rmdir $HFMROOTNAME
rm $HFMROOTNAME.zip
echo ==== Downloading HFM icon...
download https://raw.github.com/team33/hfminstall/master/hfm_48_48.ico
#
# Get mono
echo ==== Installing Mono...
apt-get --no-upgrade -qq install libmono-system-runtime4.0-cil libmono-system-runtime-serialization4.0-cil libmono-system-windows-forms4.0-cil libmono-system-data-datasetextensions4.0-cil
#
# download hfm script to /usr/bin
echo ==== Downloading HFM start script and desktop shortcut
cd /usr/bin
rm -f hfm
download https://raw.github.com/team33/hfminstall/master/hfm
chmod +x hfm
# download desktop icon to $TARGET
cd $TARGET
rm -f HFM.desktop
download https://raw.github.com/team33/hfminstall/master/HFM.desktop
chmod +x HFM.desktop
chown $SUDO_USER HFM.desktop
